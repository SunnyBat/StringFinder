/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stringfinder;

import java.io.IOException;
import javax.swing.JFileChooser;

/**
 *
 * @author Sunny
 */
public class MainWindow extends javax.swing.JFrame {

  private WordDisplay myDisplay;

  /**
   * Creates new form MainWindow
   */
  public MainWindow() {
    initComponents();
    setLocationRelativeTo(null);
  }

  public void enableReplaceButton() {
    javax.swing.SwingUtilities.invokeLater(new Runnable() {
      @Override
      public void run() {
        JBClipboardReplacing.setEnabled(true);
      }
    });
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabel3 = new javax.swing.JLabel();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    JTFQuestionText = new javax.swing.JTextField();
    jLabel4 = new javax.swing.JLabel();
    JTFWord = new javax.swing.JTextField();
    JBLoadDefsFromFile = new javax.swing.JButton();
    JBClipboardReplacing = new javax.swing.JButton();
    JCShowWords = new javax.swing.JButton();
    jButton1 = new javax.swing.JButton();

    jLabel3.setText("jLabel3");

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("StringReplacer");
    setResizable(false);

    jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
    jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel1.setText("StringFinder");

    jLabel2.setText("Question Text:");

    JTFQuestionText.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyTyped(java.awt.event.KeyEvent evt) {
        JTFQuestionTextKeyTyped(evt);
      }
    });

    jLabel4.setText("Word:");

    JBLoadDefsFromFile.setText("Load Definitions From File");
    JBLoadDefsFromFile.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        JBLoadDefsFromFileActionPerformed(evt);
      }
    });

    JBClipboardReplacing.setText("Enable Clipboard Replacing");
    JBClipboardReplacing.setEnabled(false);
    JBClipboardReplacing.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        JBClipboardReplacingActionPerformed(evt);
      }
    });

    JCShowWords.setText("Show Registered Words");
    JCShowWords.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        JCShowWordsActionPerformed(evt);
      }
    });

    jButton1.setText("Export Definitions");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(JTFQuestionText))
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel4)
            .addGap(46, 46, 46)
            .addComponent(JTFWord))
          .addGroup(layout.createSequentialGroup()
            .addComponent(JBLoadDefsFromFile)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
            .addComponent(JBClipboardReplacing))
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addComponent(jButton1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(JCShowWords)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel2)
          .addComponent(JTFQuestionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel4)
          .addComponent(JTFWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(JBLoadDefsFromFile)
          .addComponent(JBClipboardReplacing))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(JCShowWords)
          .addComponent(jButton1))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void JTFQuestionTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTFQuestionTextKeyTyped
    // TODO add your handling code here:
    if (evt.getKeyChar() == 10) {
      System.out.println("Enter pressed!");
      JTFWord.setText(WordStorage.getWord(JTFQuestionText.getText()));
      JTFQuestionText.setText("");
    }
  }//GEN-LAST:event_JTFQuestionTextKeyTyped

  private void JBLoadDefsFromFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBLoadDefsFromFileActionPerformed
    // TODO add your handling code here:
    JFileChooser chooser = new JFileChooser();
    chooser.setCurrentDirectory(new java.io.File(System.getProperty("user.home") + "\\Desktop"));
    chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
    chooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("All Files", "txt"));
    chooser.setFileHidingEnabled(false);
    chooser.setAcceptAllFileFilterUsed(false);
    chooser.setDialogTitle("Select Definitions File");
    chooser.setVisible(true);
    if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
      WordLoader.loadDefinitions(chooser.getSelectedFile()); // Should move to worker Thread
      if (WordStorage.hasWords()) {
        JBClipboardReplacing.setEnabled(true);
      }
    } else {
      System.out.println("No Selection");
    }
  }//GEN-LAST:event_JBLoadDefsFromFileActionPerformed

  private void JBClipboardReplacingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBClipboardReplacingActionPerformed
    // TODO add your handling code here:
    if (Replacer.isReplacing()) {
      System.out.println("Stopping.");
      Replacer.stopReplacing();
      JBClipboardReplacing.setText("Enable Clipboard Replacing");
    } else {
      System.out.println("Starting.");
      Replacer.startReplacing();
      JBClipboardReplacing.setText("Disable Clipboard Replacing");
    }
  }//GEN-LAST:event_JBClipboardReplacingActionPerformed

  private void JCShowWordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCShowWordsActionPerformed
    // TODO add your handling code here:
    if (myDisplay != null) {
      myDisplay.dispose();
    }
    myDisplay = new WordDisplay();
  }//GEN-LAST:event_JCShowWordsActionPerformed

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    try { // TODO: Switch to separate Thread later
      String myPath = MainWindow.class.getProtectionDomain().getCodeSource().getLocation().getFile();
      java.io.File mainFile = new java.io.File(myPath);
      Exporter myExport = new Exporter(new java.io.File(mainFile.getParent() + System.getProperty("file.separator") + "Definitions.txt"));
      myExport.exportDefinitions(WordStorage.getWordList());
    } catch (IOException iOException) {
      iOException.printStackTrace();
    }
  }//GEN-LAST:event_jButton1ActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton JBClipboardReplacing;
  private javax.swing.JButton JBLoadDefsFromFile;
  private javax.swing.JButton JCShowWords;
  private javax.swing.JTextField JTFQuestionText;
  private javax.swing.JTextField JTFWord;
  private javax.swing.JButton jButton1;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  // End of variables declaration//GEN-END:variables
}
